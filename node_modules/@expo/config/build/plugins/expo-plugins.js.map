{"version":3,"file":"expo-plugins.js","sourceRoot":"","sources":["../../src/plugins/expo-plugins.ts"],"names":[],"mappings":";;;;;;;;;AACA,kDAAoC;AACpC,iDAA6C;AAE7C;;;GAGG;AACU,QAAA,kBAAkB,GAG1B,CAAC,MAAM,EAAE,EAAE,gBAAgB,EAAE,YAAY,EAAE,EAAE,EAAE;IAClD,mCAAmC;IACnC,IAAI,CAAC,MAAM,CAAC,GAAG;QAAE,MAAM,CAAC,GAAG,GAAG,EAAE,CAAC;IACjC,MAAM,CAAC,GAAG,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;IAE/C,OAAO,0BAAW,CAAC,MAAM,EAAE;QACzB,CAAC,SAAS,CAAC,gBAAgB,CAAC,oBAAoB,EAAE,EAAE,gBAAgB,EAAE,CAAC;QACvE,SAAS,CAAC,MAAM,CAAC,UAAU;QAC3B,SAAS,CAAC,QAAQ,CAAC,YAAY;QAC/B,SAAS,CAAC,MAAM,CAAC,UAAU;QAC3B,SAAS,CAAC,IAAI,CAAC,eAAe;QAC9B,2BAA2B;QAC3B,SAAS,CAAC,WAAW,CAAC,eAAe;QACrC,SAAS,CAAC,kBAAkB,CAAC,sBAAsB;QACnD,SAAS,CAAC,MAAM,CAAC,UAAU;QAC3B,SAAS,CAAC,kBAAkB,CAAC,sBAAsB;QACnD,SAAS,CAAC,uBAAuB,CAAC,2BAA2B;QAC7D,SAAS,CAAC,OAAO,CAAC,eAAe;QACjC,SAAS,CAAC,OAAO,CAAC,WAAW;QAC7B,SAAS,CAAC,MAAM,CAAC,sBAAsB;QACvC,CAAC,SAAS,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,YAAY,EAAE,CAAC;QACjD,eAAe;QACf,SAAS,CAAC,YAAY,CAAC,0BAA0B;QACjD,SAAS,CAAC,YAAY,CAAC,wBAAwB;QAC/C,yEAAyE;QACzE,CAAC,SAAS,CAAC,YAAY,CAAC,qBAAqB,EAAE,EAAE,WAAW,EAAE,wBAAwB,EAAE,CAAC;QACzF,SAAS,CAAC,YAAY,CAAC,qBAAqB;QAC5C,eAAe;QACf,SAAS,CAAC,YAAY,CAAC,gBAAgB;QACvC,SAAS,CAAC,OAAO,CAAC,WAAW;QAC7B,YAAY;QACZ,SAAS,CAAC,KAAK,CAAC,SAAS;QACzB,SAAS,CAAC,YAAY,CAAC,gBAAgB;KACxC,CAAC,CAAC;AACL,CAAC,CAAC;AAEF;;;GAGG;AACU,QAAA,sBAAsB,GAA0B,MAAM,CAAC,EAAE;IACpE,OAAO,0BAAW,CAAC,MAAM,EAAE;IACzB,wBAAwB;KACzB,CAAC,CAAC;AACL,CAAC,CAAC","sourcesContent":["import { ConfigPlugin } from '../Plugin.types';\nimport * as IOSConfig from '../ios';\nimport { withPlugins } from './core-plugins';\n\n/**\n * Config plugin to apply all of the custom Expo iOS config plugins we support by default.\n * TODO: In the future most of this should go into versioned packages like expo-facebook, expo-updates, etc...\n */\nexport const withExpoIOSPlugins: ConfigPlugin<{\n  bundleIdentifier: string;\n  expoUsername: string | null;\n}> = (config, { bundleIdentifier, expoUsername }) => {\n  // Set the bundle ID ahead of time.\n  if (!config.ios) config.ios = {};\n  config.ios.bundleIdentifier = bundleIdentifier;\n\n  return withPlugins(config, [\n    [IOSConfig.BundleIdenitifer.withBundleIdentifier, { bundleIdentifier }],\n    IOSConfig.Branch.withBranch,\n    IOSConfig.Facebook.withFacebook,\n    IOSConfig.Google.withGoogle,\n    IOSConfig.Name.withDisplayName,\n    // IOSConfig.Name.withName,\n    IOSConfig.Orientation.withOrientation,\n    IOSConfig.RequiresFullScreen.withRequiresFullScreen,\n    IOSConfig.Scheme.withScheme,\n    IOSConfig.UserInterfaceStyle.withUserInterfaceStyle,\n    IOSConfig.UsesNonExemptEncryption.withUsesNonExemptEncryption,\n    IOSConfig.Version.withBuildNumber,\n    IOSConfig.Version.withVersion,\n    IOSConfig.Google.withGoogleServicesFile,\n    [IOSConfig.Updates.withUpdates, { expoUsername }],\n    // Entitlements\n    IOSConfig.Entitlements.withAppleSignInEntitlement,\n    IOSConfig.Entitlements.withAccessesContactNotes,\n    // TODO: We don't have a mechanism for getting the apple team id here yet\n    [IOSConfig.Entitlements.withICloudEntitlement, { appleTeamId: 'TODO-GET-APPLE-TEAM-ID' }],\n    IOSConfig.Entitlements.withAssociatedDomains,\n    // XcodeProject\n    IOSConfig.DeviceFamily.withDeviceFamily,\n    IOSConfig.Locales.withLocales,\n    // Dangerous\n    IOSConfig.Icons.withIcons,\n    IOSConfig.SplashScreen.withSplashScreen,\n  ]);\n};\n\n/**\n * Config plugin to apply all of the custom Expo Android config plugins we support by default.\n * TODO: In the future most of this should go into versioned packages like expo-facebook, expo-updates, etc...\n */\nexport const withExpoAndroidPlugins: ConfigPlugin<unknown> = config => {\n  return withPlugins(config, [\n    // TODO: Support Android\n  ]);\n};\n"]}